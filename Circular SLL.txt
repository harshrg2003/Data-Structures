#include<stdio.h>

#include<stdlib.h>

struct node

{

   int info;

   struct node *link;

};

typedef struct node* NODE;

 NODE getnode()

 {

    NODE x;

    x=(NODE)malloc(sizeof(struct node));

    if(x==NULL)

    {

       printf("Memory not allocated\n");

       exit(0);

    }

     return x;

 }

 NODE insert_front(NODE last,int item)

 {

     NODE temp;

     temp=getnode();

     temp->info=item;

     if(last==NULL)

     {

        last=temp;

     }

     else

     {

        temp->link=last->link;

     }   

        last->link=temp;

        return last;

 }

 NODE insert_rear(NODE last,int item)

 {

    NODE temp;

    temp=getnode();

    temp->info=item;

    if(last==NULL)

    {

        last=temp;

    }

    else

    {

        temp->link=last->link;

    }

    last->link=temp;

    return temp;

 }

 NODE delete_front(NODE last)

 {

    NODE first;

    if(last==NULL)

    {

        printf("Empty circular linked list");

        return NULL;

    }

    if(last->link==last)

    {

        printf("Deleted element is %d\n",last->info);

        free(last);

        return NULL;

    }

    first=last->link;

    last->link=first->link;

    printf("Deleted element is %d",first->info);

    free(first);

    return last;

 }

 NODE delete_rear(NODE last)

 {

     NODE prev;

    if(last==NULL)

    {

       printf("Deletion not posssible\n");

       return NULL;

    }

    if(last->link==last)

    {

       printf("Deleted element is %d\n",last->info);

       free(last);

       return NULL;

    }

    prev=last->link;

    while(prev->link!=last)

    {

      prev=prev->link;

    }

    prev->link=last->link;

    printf("Deleted element is %d\n",last->info);

    free(last);

    return prev;

}

void display(NODE last)

{

   NODE curr;

   if(last==NULL)

   {

      printf("The list is Empty\n");

      return;

   }

   printf("Elements of the circular linked list are\n");

   curr=last->link;

   while(curr!=last)

   {

     printf("%d\t",curr->info);

     curr=curr->link;

   }

   printf("%d\n",curr->info); 

}

 int main()

 {

    NODE last;

    last=NULL;

    int ch,elem;

    while(1)

    {

         printf("Press 1.Insert front\n2.Insert rear\n3.Delete front\n4.Delete rear\n5.Display\n");

         printf("Enter your choice\n");

         scanf("%d",&ch);

         switch(ch)

         {

              case 1:printf("Enter the element\n");

                     scanf("%d",&elem);

                     last=insert_front(last,elem);

                     break;

             case 2:printf("Enter the element\n");

                    scanf("%d",&elem);

                    last=insert_rear(last,elem);

                    break;

             case 3:last=delete_front(last);

                    break;

             case 4:last=delete_rear(last);

                    break;

             case 5:display(last);

                    break;

             default:exit(0);

        }

  }

   return 0;

}                                                               

                   